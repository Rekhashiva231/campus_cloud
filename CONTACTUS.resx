<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QlkECJMX0ACm38VJ+v/Z
</value>
  </data>
</root>